version: '2.1'

services:
  # 内嵌 MySQL 服务，如果使用外部 MySQL，可以这这里的 mysql-service 删掉
  mysql-service:
    image: mysql:5.7.27
    container_name: mysql-service
    restart: always
    networks:
      - my-network
    volumes:
      # 数据存储目录
      - ./data/mysql-data:/var/lib/mysql
      # MySQL 配置文件
      - ./config-repo/mysql/conf/my.cnf:/etc/my.cnf
      # SQL 初始化脚本
      - ./config-repo/mysql:/docker-entrypoint-initdb.d
    environment:
      - "MYSQL_ROOT_PASSWORD=123456"
      - "MYSQL_DATABASE=sg-exam-user"
      - "TZ=Asia/Shanghai"
    ports:
      # 宿主机：容器
      - "3306:3306"

  # 内嵌 Redis 服务，如果使用外部 Redis，可以这这里的 redis-service 删掉
  redis-service:
    image: redis:latest
    container_name: redis-service
    restart: always
    networks:
      - my-network
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-data:/data
      - ./config-repo/redis/redis.conf:/usr/local/etc/redis/redis.conf

  # 内嵌 MinIO 服务，如果使用外部 Redis，可以这这里的 minio-service 删掉
  minio-service:
    image: minio/minio
    container_name: minio-service
    restart: always
    networks:
      - my-network
    command: server /data --address "0.0.0.0:9000" --console-address "0.0.0.0:9090"
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      - "MINIO_ACCESS_KEY=admin"
      - "MINIO_SECRET_KEY=admin123456"
    volumes:
      - ./data/minio/data:/data
      - ./data/minio/config:/root/.minio

  sg-exam:
    image: ${SG_EXAM_REGISTRY}/sg-exam:latest
    restart: always
    networks:
      - my-network
    env_file: .env
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./logs/:/apps/data/web/working/logs/
    depends_on:
      - mysql-service
      - redis-service
      - minio-service

networks:
  my-network:
    name: my-network
    driver: bridge
